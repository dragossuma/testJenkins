<Activity mc:Ignorable="sap sap2010 sads" x:Class="CreateRobot"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:SimpleJson;assembly=RestSharp"
 xmlns:s1="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="orchestratorUser" Type="InArgument(x:String)" />
    <x:Property Name="orchestratorURL" Type="InArgument(x:String)" />
    <x:Property Name="orchestratorPassword" Type="InArgument(x:String)" />
    <x:Property Name="orchestratorTennant" Type="InArgument(x:String)" />
    <x:Property Name="createdRobot" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>CreateRobot_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>SimpleJson</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>RestSharp</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Java.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CreateRobot" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="AccessToken" />
      <Variable x:TypeArguments="s:JsonObject" Name="deserializedJSON" />
      <Variable x:TypeArguments="x:String" Name="response" />
      <Variable x:TypeArguments="x:String" Default="[&quot;TestRobot&quot; + (new Random().Next(1,10000)).ToString]" Name="robotName" />
      <Variable x:TypeArguments="x:String" Name="robotUserName" />
      <Variable x:TypeArguments="ui:GenericValue" Name="DBConnString" />
      <Variable x:TypeArguments="sd:DataTable" Name="MachineIDTable" />
      <Variable x:TypeArguments="x:Int32" Name="randomRow" />
      <Variable x:TypeArguments="x:String" Name="MachineIDTableString" />
      <Variable x:TypeArguments="x:String" Name="querry" />
      <Variable x:TypeArguments="x:String" Name="Machines" />
      <Variable x:TypeArguments="njl:JObject" Name="MachinesJson" />
      <Variable x:TypeArguments="njl:JArray" Name="MachinesJsonArray" />
    </Sequence.Variables>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Invokig Auth using &quot; + orchestratorURL]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke OrchestratorAuthenticate workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="OrchestratorAuthenticate.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="s:JsonObject" x:Key="deserializedJSON">[deserializedJSON]</InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="orchestratorUser">[orchestratorUser]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="orchestratorURL">[orchestratorURL]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="orchestratorPassword">[orchestratorPassword]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="orchestratorTennant">[orchestratorTennant]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="AccessToken">[AccessToken]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[robotName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["TestRobot" + (new Random().Next(1,10000)).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[robotUserName]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["uipath\dragos.suma" + (new Random().Next(1,10000)).ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="ANY" BodyFormat="application/xml" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="GetMachinesFromTennant" EndPoint="[orchestratorURL+&quot;/odata/Machines&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="GET" Result="[Machines]" TimeoutMS="6000">
      <ui:HttpClient.Attachments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Attachments>
      <ui:HttpClient.Headers>
        <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + deserializedJSON("result").ToString]</InArgument>
      </ui:HttpClient.Headers>
      <ui:HttpClient.Parameters>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.Parameters>
      <ui:HttpClient.UrlSegments>
        <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
      </ui:HttpClient.UrlSegments>
    </ui:HttpClient>
    <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[MachinesJson]" JsonString="[Machines]" />
    <ui:DeserializeJsonArray DisplayName="Deserialize JSON Array" sap2010:WorkflowViewState.IdRef="DeserializeJsonArray_1" JsonArray="[MachinesJsonArray]" JsonString="[MachinesJson(&quot;value&quot;).ToString]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[randomRow]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[new Random().next(1,MachinesJsonArray.Count)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Creating a robot with name &quot; +robotName +&quot; on machine identified by id :&quot;  + MachinesJsonArray(randomRow)(&quot;Id&quot;).ToString]" />
    <TryCatch DisplayName="Try Catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" ContinueOnError="False" DisplayName="CreateRobot" EndPoint="[orchestratorURL + &quot;/odata/Robots&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_2" Method="POST" Result="[response]" TimeoutMS="6000">
          <ui:HttpClient.Attachments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.Attachments>
          <ui:HttpClient.Headers>
            <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + deserializedJSON("result").ToString]</InArgument>
          </ui:HttpClient.Headers>
          <ui:HttpClient.Parameters>
            <InArgument x:TypeArguments="x:String" x:Key="LicenseKey">testLicense</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="MachineName">[MachinesJsonArray(randomRow)("Name").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="MachineId">[MachinesJsonArray(randomRow)("Id").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Name">[robotName]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="username">[robotUserName]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Description">API created robot</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Version">1.0</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="Type">Development</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="HostingType">Standard</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="password">dragos123$</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="CredentialType">Default</InArgument>
          </ui:HttpClient.Parameters>
          <ui:HttpClient.UrlSegments>
            <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
          </ui:HttpClient.UrlSegments>
        </ui:HttpClient>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s1:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <ActivityAction x:TypeArguments="s1:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
              <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Error" Message="[&quot;Could not create robot &quot; +exception.ToString]" />
              <TerminateWorkflow DisplayName="Terminate Workflow" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Failed to create the robot" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <If Condition="[response.ToString.Contains(&quot;errorCode&quot;)]" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Error" Message="[&quot;Failed to create robot using &quot; +robotName + &quot; || &quot;+robotUserName + &quot; on machine &quot; + MachineIDTable.Rows(randomRow)(&quot;id&quot;).ToString + &quot; API response &quot; +response.ToString]" />
                <TerminateWorkflow DisplayName="Terminate Workflow" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="Failed to create robot " />
              </Sequence>
            </If.Then>
          </If>
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Created robot &quot; +response.ToString]" />
    <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[createdRobot]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[response.ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Created Robot to robots Queue" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="Normal" QueueType="CreatedRobotsQueue" Reference="[robotName]">
      <ui:AddQueueItem.ItemInformation>
        <InArgument x:TypeArguments="x:String" x:Key="createdRobot">[robotName]</InArgument>
      </ui:AddQueueItem.ItemInformation>
    </ui:AddQueueItem>
    <sads:DebugSymbol.Symbol>d0VDOlxVc2Vyc1xkcmFnb3Muc3VtYVxEb2N1bWVudHNcVWlQYXRoXFNpbXBsZVJvYm90QVBJXENyZWF0ZVJvYm90LnhhbWxOVQPdAQ4CAQFaNFp1AgECZQVlqgECAWZmBW8dAgFYcAV3DgIBVHgFfw4CAVCAAQWNARUCAUeOAQWOAcIBAgFCjwEFjwHWAQIBPpABBZcBDgIBOpgBBZgBkAICATiZAQXNARACARHOAQXOAaYBAgEOzwEF1gEOAgEJ1wEF2wEXAgEDZXJlpwECAWdrTWtjAgFkaFBoYgIBYmpIalkCAWBtRW1SAgFebExsYQIBXGlJaVsCAVpmxQFm5AECAVl1MHVlAgFXcjFyPAIBVX0wfW4CAVN6MXpAAgFRgAGUA4ABnwMCAU+AAdgEgAHeBAIBToUBRoUBdwIBTYABwQSAAc0EAgFLgAHOA4AB/QMCAUmAAe4CgAH5AgIBSI4BswGOAb8BAgFFjgGXAY4BpwECAUOPAYYBjwGbAQIBQI8BpwGPAdMBAgE/lQEvlQFdAgE9kgEwkgE7AgE7mAFymAGNAgIBOZsBCbIBGQIBIcIBCcsBFAIBGLoBDb0BGAIBEs4Bcs4BowECAQ/UATDUAUMCAQzRATHRAT8CAQrXAeUB1wHyAQIBB9cBxgHXAdoBAgEG2QFF2QFQAgEEmwH/ApsBigMCATebAdEEmwHXBAIBNpsBmwObAaIDAgE1qAFIqAFZAgE0oAFKoAF7AgEzrQFLrQFSAgEypAFIpAF3AgExrAFFrAFPAgEwqQFEqQFHAgEvmwG6BJsBxgQCAS2bAcYDmwH1AwIBK6MBR6MBUgIBKqcBRacBVAIBKKoBQaoBTAIBJ6sBSKsBUAIBJpsB2QKbAeQCAgElpQFGpQFzAgEkpgFBpgFMAgEiwwELygEQAgEZuwEPuwG7AQIBFbwBD7wBnwECARPDARnDAU4CARrFAQ/IARoCARy7AX27AbgBAgEWvAGAAbwBnAECARTGARHGAeACAgEfxwERxwGeAQIBHcYBf8YB3QICASDHAYIBxwGbAQIBHg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="417.6,92.8" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="417.6,88" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="417.6,60" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="417.6,60" />
      <sap2010:ViewStateData Id="HttpClient_3" sap:VirtualizedContainerService.HintSize="417.6,22.4" />
      <sap2010:ViewStateData Id="DeserializeJson`1_1" sap:VirtualizedContainerService.HintSize="417.6,60" />
      <sap2010:ViewStateData Id="DeserializeJsonArray_1" sap:VirtualizedContainerService.HintSize="417.6,60" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="417.6,60" />
      <sap2010:ViewStateData Id="LogMessage_2" sap:VirtualizedContainerService.HintSize="417.6,92.8" />
      <sap2010:ViewStateData Id="HttpClient_2" sap:VirtualizedContainerService.HintSize="200,22.4" />
      <sap2010:ViewStateData Id="LogMessage_4" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336.8,280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="403.2,22.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="314.4,92.8" />
      <sap2010:ViewStateData Id="TerminateWorkflow_2" sap:VirtualizedContainerService.HintSize="314.4,22.4" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336.8,280">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,429.6" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="486.4,554.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="417.6,291.2" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="417.6,92.8" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="417.6,60" />
      <sap2010:ViewStateData Id="AddQueueItem_1" sap:VirtualizedContainerService.HintSize="417.6,22.4" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="440,1667.2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CreateRobot_1" sap:VirtualizedContainerService.HintSize="480,1747.2" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>